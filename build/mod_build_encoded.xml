<?xml version="1.0"  encoding="UTF-8" ?>

<!-- todo
jsMin, SvnCheckout, Version, Documentor
-->

<project name="cubi_mod" basedir="../" default="dist">
    <property name="package"  value="cubi_${buildName}" override="true" />
    <property name="builddir" value="build/src/${package}" override="true" />
    <property name="builddir_encoded" value="build/encoded/${package}" override="true" />
    <property name="srcdir"   value="${project.basedir}" override="true" />
    <property name="distdir" value="build/dist/${package}" override="true" />
    <property name="distfile" value="${distdir}/${package}-${buildNumber}.${ext}" override="true" />

    <!-- Fileset for base source files -->
    <fileset dir="." id="basesrc">
        <include name="modules/${buildName}/**" />
    </fileset>
    
    <!-- ============================================  -->
    <!-- Target: build                                 -->
    <!-- ============================================  -->
    <target name="build" description="build source">
    	<delete dir="${builddir}" />
    	<delete dir="${builddir_encoded}" />
        <delete file="${distfile}" />
        <echo msg="Copy source files..." />
        <copy todir="${builddir}">
            <fileset refid="basesrc" />
        </copy>
        <echo msg="Files copied and compressed in build directory OK!" />
    </target>
    
    <!-- ============================================  -->
    <!-- (DEFAULT) Target: dist                        -->
    <!-- ============================================  -->
    <target name="dist" depends="build, encode, tar">
    </target>

	<!-- 
	${module}/register_handler.php
	
	function ${module}_register_handler($server_data){}
	 -->
    <target name="encode">
	    <ioncubeencoder phpVersion="5" binary="false" ioncubepath="/Users/jixian/ioncube" optimize="max"
		  targetoption="replace" withoutruntimeloadersupport="false"  Encrypt="*.tpl *.html *.htm *.xml"
		  CallbackFile ="license_exception.php"   ActionIfNoLoader="header('Location: '.APP_INDEX.'/common/loader_not_installed');"
		  Copy="*LoadHandler.php register_handler.php mod.xml upgrade.xml resource/"
		  fromdir="build/src/${package}" todir="build/encoded/${package}" licensepath="license.key" passphrase="${passphrase}">		  
		</ioncubeencoder>
		
		<ioncubeencoder phpVersion="5" binary="false" ioncubepath="/Users/jixian/ioncube" optimize="max"
		  targetoption="replace" withoutruntimeloadersupport="false"  
		  CallbackFile ="license_exception.php"   ActionIfNoLoader="header('Location: '.APP_INDEX.'/common/loader_not_installed');"
		  fromdir="build/src/${package}/modules/${buildName}/register_handler.php" todir="build/encoded/${package}/modules/${buildName}/register_handler.php" >		  
		</ioncubeencoder>
    </target>
    
    <!-- 	<comment>Openbiz Collaboration</comment>	  
     -->
    <!-- ============================================  -->
    <!-- Target: tar                                   -->
    <!-- ============================================  -->
    <target name="tar">
        <echo msg="Creating archive at ${builddir_encoded}..." />
        <mkdir dir="${distdir}" />
        <delete file="${distfile}" />
        <tar destfile="${distfile}" compression="gzip">
            <fileset dir="build/encoded/">
                <include name="${package}/**" />
            </fileset>
        </tar>
        <echo msg="Distribution file is created in build directory OK!" />
    </target>

    <!-- ============================================  -->
    <!-- Target: Rebuild                               -->
    <!-- ============================================  -->
    <target name="rebuild" description="rebuilds this package">
        <delete dir="${builddir}" />
        <delete dir="${builddir_encoded}" />
        <delete file="${distfile}" />
        <phingcall target="dist" />
    </target>
    
    <!-- ============================================  -->
    <!-- Target: Clean                                 -->
    <!-- ============================================  -->
    <target name="clean" description="clean this package">
        <delete dir="${builddir}" />
        <delete file="${distfile}" />
    </target>
</project>